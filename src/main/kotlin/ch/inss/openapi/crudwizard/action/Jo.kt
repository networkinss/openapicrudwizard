package ch.inss.openapi.crudwizard.action

import ch.inss.openapi.crudwizard.OutputWraper
import ch.inss.openapi.joaswizard.InputParameter
import ch.inss.openapi.joaswizard.Joaswizard
import ch.inss.openapi.joaswizard.OasInfo
import java.io.InputStream

object Jo {


    /** Processing data and generating new file content. */
    fun joStringToOas3(inputText: String, max: Int): OutputWraper {
        val jo = Joaswizard()
        val input = InputParameter()
        val output = OutputWraper()
        val oasInfo = OasInfo()

        input.sampleYamlData = inputText
        input.setSourceType("YAMLSTRING")
        input.resource = "object"
        input.maxobjects = max

        oasInfo.title = "OAS3 document"
        oasInfo.description = "Generated by the IntelliJ Plugin \'OpenAPI CRUD Wizard\'"
        input.oasInfo = oasInfo

        var outputText = jo.createCrudFromYamlToString(input)
        if (outputText == null) outputText = ""
        output.outputText = outputText
        val msg: String? = jo.errorMessage
        if (msg != null && !msg.endsWith("null")) {
            output.error = msg
        } else if (jo.warningMessage != null) {
            output.warning = jo.warningMessage
        }
        return output
    }

    /**
     * Processing Excel input.
     */
    fun joExcelToOas3String(inputStream: InputStream): OutputWraper {
        val jo = Joaswizard()
        val input = InputParameter()
        val output = OutputWraper()
        val oasInfo = OasInfo()
        oasInfo.title = "OAS3 document"
        oasInfo.description = "Generated by the IntelliJ Plugin \'OpenAPI CRUD Wizard\'"

//        input.resource = "object"
        input.maxobjects = 100
        input.oasInfo = oasInfo
        input.addMethod(InputParameter.Method.CRUD)
        input.resourceId = "Id"
        input.inputStream = inputStream

        val createFromExcelInputstreamToString = jo.createFromExcelInputstreamToString(input)

        output.outputText = createFromExcelInputstreamToString
        val msg: String? = jo.errorMessage
        if (msg != null && !msg.endsWith("null")) {
            output.error = msg
        } else if (jo.warningMessage != null) {
            output.warning = jo.warningMessage
        }
        return output
    }

    fun joExcelToOas3File(): Boolean {
        val jo = Joaswizard()
        val input = InputParameter()
        input.addMethods("get")
        input.inputFile = "src/test/testData/objectimport.xlsx"
        val oasInfo = OasInfo()
        oasInfo.title = "OAS3 document"
        oasInfo.description = "Generated by the IntelliJ Plugin \'OpenAPI CRUD Wizard\'"

//        input.resource = "object"
        input.maxobjects = 100
        input.oasInfo = oasInfo

        return jo.createFromExcelToFile(input)

    }


}